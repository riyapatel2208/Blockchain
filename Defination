Pr6
Chainlink Oracles
-Decentralized Oracle Network Chainlink
Blockchains can't make API calls
Failure Centralized Nodes are Points of
-data.chain.link
-Getting External Data with Chainlink Oracles
Chainlink
Getting Price Information

Pr7
Importing from NPM and Advanced Solidity
Decimals/Floating Point Numbers in Solidity
latestRoundData
Importing from NPM in Remix Interfaces
Introduction to ABIS
Getting Price Feed Addresses
getPrice
Tuples
Unused Tuple Variables
Matching Units (WEI/GWEI/ETH)
getConversion Rate
Matching Units (Continued)
SafeMath& Integer Overflow
using keyword
Libraries
SafeMath PSA
Setting a Threshold
Require
Revert
Withdraw Function
Transfer
Balance
this
Contract Owners
Constructor
==
Modifiers
Resetting
for loop
Array Length
Forcing a Transaction
Recap

Pr8 
Web3.py Simple Storage
Installing VSCode, Python, and Web3
Developer Bootcamp Setup Instructions (metamask, vscode, python, nodejs..)
VSCode
VSCode Crash Course
Extensions
-Short Cuts:
--VSCode Shortcuts
--VSCodeMacOS Shortcuts
Python
--Install Troubleshooting
Terminal
Making a directory/Folder
Opening the folder up with VSCode
Creating a new file
Syntax Highlights
Remember to save!
Setting linting compile version
-VSCode Solidity Settings
Formatting & Format on Save
Solidity Prettier
Python Black
Pip

Pr9

Our First Python Script with Web3.py - Deploying a Contract
Reading our solidity file
Running a Python Script in the Terminal
Windows Shortcuts
Compiling in Python
py-solc-x
--compile_standard
Colorized Brackets
JSON ABI
Saving Compiled Code 1
Formatting JSON
Deploying in Python
1.Get Bytecode 
2.Get ABI
3.Choose Blockchain to Deploy To
--Local Ganache Chain
--Ganache Ul
--Ganache Command Line
Web3.py
HTTP/RPC Provider
Private Keys MUST start with "Ox"
Contract Object
Building a Transaction
Account Nonce
Calling "Constructor"
Transaction Parameters
Signing the Transaction
NEVER put your private key directly in your code
Setting Environment Variables (Windows)
Exported Environment Variables Only Last the
Duration of the Shell/Terminal
Private Key PSA
env file
gitignore
Loading .env File in Python
--python-dotenv
Viewing our Transaction / Deployment in Ganache
Waiting for Block Confirmations


Pr10
Interacting with Our Contract in Python & Web3.py
Things you always need
i. Contract Address
ii. Contract ABI
Getting address from transaction receipt
Calling a view function with web3.py
Call vs Transact
Updating State with Web3.py
ganache-cli
Installing Ganache
--Install Nodejs
--Install Yarn
Working with ganache-cli
Open a new terminal in the same window
Deploying to a testnet
Infura
Alchemy
Using Infura RPC URL / HTTP Provider
Chain Ids
Wow this seems like a lot of work... Is there a better way?





